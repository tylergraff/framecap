# Copyright Tyler Graff 2017
# tyler@graff.com 
# 
framecap: Capture and save v4l2 camera frames to multiple locations 

framecap captures one or more frames from a v4l2 device and allows a user to
select one or more ways to process and output the frame. Configuration such as
frame resolution and image format are NOT available via framecap. Instead, a
user must configure the v4l2 device with another utility (like v4l2-ctl) first.

Usage:
 framecap [opts] <device>
  Capture one or more frames from v4l2 device <device>, process them according
  to [opts] as speficed below. Default options are: -c 0 -n 1

 Option:     Description: 
  -b <str>   If device is configured to produce YUYV format frames, print
             banner text <str> to top-left of frame if device frame

  -c <int>   Output [n] frames and then exit. Use -c 0 to output forever

  -f <file>  _Atomically_ write frames to <file> by first writing them
             to <file>.tmp, and the renaming that to <file>. This allows
             other programs to concurrently read <file> safely

  -j [1-3]   Compress frames into JPEG format at quality 1 (lowest) to
             3 (highest/largest file). (YUYV only)

  -n <n>     Sub-sample by capturing only 1 of every [n] frames provided
             by the v4l2 device. n=1 outputs every frame

  -o         Also write each output frame to STDOUT

  -r <n>     Capture (at most) 1 frame every <n> milliseconds. This also
             prevents the device from writing to its framebuffer during
             the delay period, which may help decrease bus bandwidth.

  -s <f>     Also write each output frame to <f>-<d> where <d> is a 
             sequential decimal integer incremented each frame
